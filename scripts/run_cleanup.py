# app/scripts/run_cleanup.py
"""
Script pour ex√©cuter le nettoyage automatique
"""
import sys
from pathlib import Path

# Ajouter le r√©pertoire parent au path pour les imports
sys.path.append(str(Path(__file__).parent.parent))

from sqlmodel import Session, select
from core.database import engine
from models.base import User
from services.ACD.archive import ArchiveService
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def run_cleanup():
    """Ex√©cute le nettoyage automatique"""
    
    with Session(engine) as session:
        # R√©cup√©rer l'admin pour executed_by
        admin_user = session.exec(select(User).where(User.role == "administrateur")).first()
        if not admin_user:
            logger.error("‚ùå Aucun utilisateur administrateur trouv√©")
            return
        
        logger.info("üßπ Ex√©cution du nettoyage automatique...")
        
        archive_service = ArchiveService(session)
        cleanup_stats = archive_service.cleanup_old_data(admin_user)
        
        if cleanup_stats:
            logger.info("‚úÖ Nettoyage termin√© avec succ√®s!")
            total_deleted = 0
            for table, count in cleanup_stats.items():
                logger.info(f"   üìä {table}: {count} enregistrements supprim√©s")
                total_deleted += count
            logger.info(f"   üéØ Total: {total_deleted} enregistrements supprim√©s")
        else:
            logger.warning("‚ö†Ô∏è Aucune donn√©e nettoy√©e ou erreur lors du nettoyage")

if __name__ == "__main__":
    run_cleanup()
